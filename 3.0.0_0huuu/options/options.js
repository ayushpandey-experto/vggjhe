class OptionsManager{constructor(){this.currentSection="main",this.i18n=null,this.settings={},this.defaultModels={openai:"gpt-4o",anthropic:"claude-sonnet-4-20250514",openrouter:"x-ai/grok-3-beta"},this.modelsCache={openai:[],anthropic:[],openrouter:[]}}async init(){try{await this.initializeI18n(),await this.initializeDatabase(),await this.loadSettings(),this.setupEventListeners(),this.initializeUI(),await this.loadAboutInfo(),this.showSection("main"),console.log("‚úÖ Options page initialized successfully")}catch(e){console.error("‚ùå Options page initialization failed:",e)}}async initializeDatabase(){try{console.log("üóÑÔ∏è Initializing UnifiedDatabaseManager for options page...");let e=0;for(;!window.UnifiedDatabaseManager&&e<10;)console.log(`‚è≥ Waiting for UnifiedDatabaseManager (attempt ${e+1}/10)...`),await new Promise((e=>setTimeout(e,100))),e++;if(!window.UnifiedDatabaseManager)throw new Error("UnifiedDatabaseManager is not available after loading");await window.UnifiedDatabaseManager.init(),console.log("‚úÖ UnifiedDatabaseManager initialized for options page")}catch(e){console.error("‚ùå Failed to initialize database for options page:",e)}}async initializeI18n(){try{console.log("üåê Starting I18n initialization..."),console.log("üîç window.I18nManager available?",typeof window.I18nManager),void 0===window.I18nManager&&(console.log("üì• Loading I18nManager module..."),await new Promise(((e,t)=>{const o=document.createElement("script");o.src=chrome.runtime.getURL("modules/i18n-manager.js"),o.onload=()=>{console.log("‚úÖ I18nManager script loaded"),setTimeout((()=>{console.log("üîç window.I18nManager after loading:",typeof window.I18nManager),e()}),100)},o.onerror=e=>{console.error("‚ùå Failed to load I18nManager script:",e),t(e)},document.head.appendChild(o)})));let e=0;for(;!window.I18nManager&&e<10;)console.log(`‚è≥ Waiting for I18nManager (attempt ${e+1}/10)...`),await new Promise((e=>setTimeout(e,100))),e++;if(!window.I18nManager)throw new Error("I18nManager is not available after loading");console.log("üîß Using I18nManager object directly..."),this.i18n=window.I18nManager,await this.i18n.init(),this.settings&&this.settings.language&&(console.log(`üåê Setting language from settings: ${this.settings.language}`),await this.i18n.setLanguage(this.settings.language)),this.applyTranslations(),console.log("‚úÖ I18n initialized successfully")}catch(e){console.error("‚ùå I18n initialization failed:",e),this.i18n={t:e=>e,getMessage:e=>e,getCurrentLanguage:()=>"en"},console.log("üîÑ Using fallback I18n implementation")}}applyTranslations(){if(!this.i18n)return;document.querySelectorAll("[data-i18n]").forEach((e=>{const t=e.getAttribute("data-i18n"),o=this.i18n.getMessage?this.i18n.getMessage(t):this.i18n.t(t);o&&o!==t&&("INPUT"===e.tagName&&"text"===e.type?e.placeholder=o:e.textContent=o)}))}setupEventListeners(){document.querySelectorAll(".menu-item").forEach((e=>{e.addEventListener("click",(t=>{t.preventDefault();const o=e.getAttribute("data-section");o&&this.showSection(o)}))}));const e=document.getElementById("language-select");e&&e.addEventListener("change",(e=>{this.changeLanguage(e.target.value)}));document.querySelectorAll(".test-btn").forEach((e=>{e.addEventListener("click",(e=>{const t=e.target.id;"test-openai"===t?this.testApiKey("openai"):"test-anthropic"===t?this.testApiKey("anthropic"):"test-openrouter"===t&&this.testApiKey("openrouter")}))}));document.querySelectorAll("#openai-model, #anthropic-model, #openrouter-model").forEach((e=>{e.addEventListener("change",(e=>{const t=e.target.id.replace("-model","");this.onModelChange(t,e.target.value)}))}));const t=document.getElementById("export-btn");t&&t.addEventListener("click",(()=>this.exportSettings()));const o=document.getElementById("select-file-btn");o&&o.addEventListener("click",(()=>{document.getElementById("import-file").click()}));const n=document.getElementById("import-file");n&&n.addEventListener("change",(e=>this.handleFileSelect(e)));const s=document.getElementById("import-btn");s&&s.addEventListener("click",(()=>this.importSettings()));const a=document.getElementById("select-all-btn");a&&a.addEventListener("click",(()=>this.selectAllImportOptions()));const i=document.getElementById("deselect-all-btn");i&&i.addEventListener("click",(()=>this.deselectAllImportOptions()));const l=document.getElementById("auto-save");l&&l.addEventListener("change",(()=>this.saveSettings()));const r=document.getElementById("show-templates");r&&r.addEventListener("change",(()=>this.saveSettings()));const c=document.getElementById("node-execution-select");c&&c.addEventListener("change",(()=>this.saveSettings()));const d=document.getElementById("notifications");d&&d.addEventListener("change",(()=>this.saveSettings()));const g=document.getElementById("n8n-api-key");g&&g.addEventListener("blur",(()=>this.saveSettings()));const p=document.getElementById("n8n-api-url");p&&p.addEventListener("blur",(()=>this.saveSettings()));const m=document.getElementById("save-all-btn");m&&m.addEventListener("click",(()=>this.saveSettings()))}showSection(e){document.querySelectorAll(".section").forEach((e=>{e.classList.remove("active")}));document.querySelectorAll(".menu-item").forEach((e=>{e.classList.remove("active")}));const t=document.getElementById(`${e}-section`);t&&t.classList.add("active");const o=document.querySelector(`[data-section="${e}"]`);o&&o.classList.add("active"),this.currentSection=e,console.log(`Switched to section: ${e}`),"about"===e&&this.loadAboutInfo()}async loadSettings(){try{const e=await chrome.storage.sync.get(["language","extension_language","systemMessages"]),t=await chrome.storage.local.get(["apiKeys","n8nApiKey","n8nApiUrl","uiSettings","notifications","selectedModels","userPreferences","autoSave","showTemplates","nodeExecutionSelect","enableFeatures"]);console.log("üîç Sync storage loaded:",e),console.log("üîç Local storage loaded:",t),console.log("üîç API keys from local storage:",t.apiKeys),this.settings={language:e.language||"en",extension_language:e.extension_language||"en",systemMessages:e.systemMessages||{},selectedModels:t.selectedModels||{},userPreferences:t.userPreferences||{},autoSave:void 0===t.autoSave||t.autoSave,showTemplates:void 0===t.showTemplates||t.showTemplates,nodeExecutionSelect:void 0!==t.nodeExecutionSelect&&t.nodeExecutionSelect,enableFeatures:t.enableFeatures||{},uiSettings:t.uiSettings||{},notifications:void 0===t.notifications||t.notifications,openaiApiKey:t.apiKeys?.openai||t.apiKeys?.chatgpt||"",anthropicApiKey:t.apiKeys?.anthropic||"",openrouterApiKey:t.apiKeys?.openrouter||t.apiKeys?.grok||"",n8nApiKey:t.n8nApiKey||"",n8nApiUrl:t.n8nApiUrl||""},console.log("‚úÖ Settings loaded from chrome.storage:"),console.log("  - Language:",this.settings.language),console.log("  - OpenAI key:",this.settings.openaiApiKey?"***PRESENT***":"MISSING"),console.log("  - Anthropic key:",this.settings.anthropicApiKey?"***PRESENT***":"MISSING"),console.log("  - OpenRouter key:",this.settings.openrouterApiKey?"***PRESENT***":"MISSING"),console.log("  - N8N API key:",this.settings.n8nApiKey?"***PRESENT***":"MISSING"),console.log("  - System messages:",Object.keys(this.settings.systemMessages).length,"keys"),console.log("  - Auto Save:",this.settings.autoSave),console.log("  - Show Templates:",this.settings.showTemplates),console.log("  - Node Execution Select:",this.settings.nodeExecutionSelect),console.log("  - Notifications:",this.settings.notifications)}catch(e){console.error("‚ùå Failed to load settings:",e)}}async testApiKey(e){const t=document.getElementById(`${e}-key`),o=document.getElementById(`${e}-status`),n=document.getElementById(`test-${e}`);if(!t||!o||!n)return;const s=t.value.trim();if(s){n.disabled=!0,n.textContent="Testing...",this.showStatus(o,"Testing API key...","warning");try{let t=!1;switch(e){case"openai":t=s.startsWith("sk-")&&s.length>20;break;case"anthropic":t=s.startsWith("sk-ant-")&&s.length>20;break;case"openrouter":t=s.startsWith("sk-or-")&&s.length>20}if(t){this.showStatus(o,"API key is valid!","success");const t=(await chrome.storage.local.get(["apiKeys"])).apiKeys||{};t[e]=s,"openai"===e&&(t.chatgpt=s),"openrouter"===e&&(t.grok=s),await chrome.storage.local.set({apiKeys:t}),console.log("üîë API key saved to chrome.storage.local:",{provider:e,keyPresent:!!s}),this.settings[`${e}ApiKey`]=s,await this.loadModels(e,s)}else this.showStatus(o,"Invalid API key format","error")}catch(t){console.error(`‚ùå ${e} API test failed:`,t),this.showStatus(o,"API test failed","error")}finally{n.disabled=!1,n.textContent="Test"}}else this.showStatus(o,"Please enter an API key","error")}showStatus(e,t,o){e.textContent=t,e.className=`status-message ${o}`,e.style.display="block",setTimeout((()=>{e.style.display="none"}),3e3)}async changeLanguage(e){try{await chrome.storage.sync.set({language:e}),this.settings.language=e,this.i18n&&this.i18n.setLanguage&&(await this.i18n.setLanguage(e),this.applyTranslations()),console.log(`Language changed to: ${e}`),this.showNotification("Language changed successfully","success")}catch(e){console.error("Failed to change language:",e),this.showNotification("Failed to change language","error")}}async exportSettings(){try{const e=document.getElementById("export-btn");e.disabled=!0,e.textContent="Exporting...",console.log("üîÑ Starting export process with message passing...");const{activatedSites:t=[]}=await chrome.storage.local.get("activatedSites");if(0===t.length)throw new Error("No N8N sites have been activated. Please open N8N and activate the extension first.");console.log("‚úÖ Found activated sites:",t);const o=await this.findActivatedN8NTabs(t);if(0===o.length)throw new Error("No activated N8N pages are currently open. Please open one of your activated N8N sites.");console.log("‚úÖ Found active N8N tabs:",o.map((e=>e.url)));const n=await this.requestDataFromN8NPage(o[0].id),s=await chrome.storage.sync.get(),a=await chrome.storage.local.get();console.log("üì¶ Chrome storage data loaded:",{syncKeys:Object.keys(s),localKeys:Object.keys(a)});const i={...a};delete i.deviceId,delete i.licenseActivated,delete i.licenseKey,delete i.licenseValidatedAt,delete i.licenseDeviceId,delete i.licenseTimestamp,delete i.licenseClientInfo,delete i.licenseInfo,delete i.localProjectsData,delete i.localProjectWorkflows,delete i.localVariablesData,delete i.outputTemplatesData,delete i.workflowHistory,console.log("üîí Removed sensitive data from export");const l={version:"2.17.61",timestamp:(new Date).toISOString(),chrome:{sync:s,local:i},indexedDB:n};console.log("üìã Export data structure:",{version:l.version,chromeSync:Object.keys(l.chrome.sync),chromeLocal:Object.keys(l.chrome.local),indexedDBKeys:Object.keys(l.indexedDB),totalItems:(n.localProjects?.length||0)+(n.localVariables?.length||0)+(n.outputTemplates?.length||0)});const r=new Blob([JSON.stringify(l,null,2)],{type:"application/json"}),c=URL.createObjectURL(r),d=document.createElement("a");d.href=c,d.download=`n8n-master-settings-${(new Date).toISOString().slice(0,10)}.json`,document.body.appendChild(d),d.click(),document.body.removeChild(d),URL.revokeObjectURL(c),console.log("‚úÖ Export completed successfully"),this.showNotification("Settings exported successfully","success")}catch(e){console.error("‚ùå Export failed:",e),this.showNotification("Export failed: "+e.message,"error")}finally{const e=document.getElementById("export-btn");e.disabled=!1,e.textContent="Export Settings"}}async findActivatedN8NTabs(e){return new Promise((t=>{chrome.tabs.query({},(async o=>{const n=o.filter((t=>!!t.url&&e.some((e=>{try{const o=new URL(t.url).origin;return o===new URL(e).origin}catch(o){return t.url.includes(e)||e.includes(t.url)}})))),s=[];for(const e of n)try{const t=await new Promise((t=>{chrome.tabs.sendMessage(e.id,{action:"checkN8nPage"},(e=>{chrome.runtime.lastError?t(null):t(e)}))}));t&&t.success&&t.isN8nPage?(s.push(e),console.log("‚úÖ Validated N8N page:",e.url)):console.log("‚ö†Ô∏è Invalid N8N page (no content script or not workflow page):",e.url)}catch(t){console.log("‚ö†Ô∏è Failed to validate tab:",e.url,t.message)}t(s)}))}))}async requestDataFromN8NPage(e){return new Promise(((t,o)=>{console.log("üì° Sending data request to N8N content script..."),chrome.tabs.sendMessage(e,{action:"checkN8nPage"},(n=>{chrome.runtime.lastError?o(new Error("Content script not loaded on this page. Please refresh the N8N page and make sure the extension is active.")):n&&n.success&&n.isN8nPage?(console.log("‚úÖ Content script confirmed active on N8N page"),chrome.tabs.sendMessage(e,{action:"exportIndexedDBData"},(e=>{chrome.runtime.lastError?o(new Error(`Failed to communicate with N8N page: ${chrome.runtime.lastError.message}`)):e?e.success?(console.log("‚úÖ Received data from N8N page:",{projects:e.data.localProjects?.length||0,variables:e.data.localVariables?.length||0,templates:e.data.outputTemplates?.length||0}),t(e.data)):o(new Error(`Export failed on N8N page: ${e.error||"Unknown error"}`)):o(new Error("No response from N8N page. Make sure the extension is active on the N8N page."))}))):o(new Error("This page is not a valid N8N workflow page. Please open a workflow page."))}))}))}async exportIndexedDBData(){try{console.log("üóÑÔ∏è Starting unified IndexedDB export...");const e={localProjects:[],localVariables:[],outputTemplates:[]};if(window.UnifiedDatabaseManager){console.log("üîß Using UnifiedDatabaseManager for export...");try{const t=await window.UnifiedDatabaseManager.getAllProjects();e.localProjects=t||[],console.log("üìÅ Projects exported via UnifiedDatabaseManager:",e.localProjects.length,"items");const o=await window.UnifiedDatabaseManager.getAllVariables();e.localVariables=o||[],console.log("üìù Variables exported via UnifiedDatabaseManager:",e.localVariables.length,"items");const n=await window.UnifiedDatabaseManager.getAllOutputTemplates();e.outputTemplates=n||[],console.log("üìÑ Templates exported via UnifiedDatabaseManager:",e.outputTemplates.length,"items");const s=e.localProjects.length+e.localVariables.length+e.outputTemplates.length;return console.log(`‚úÖ UnifiedDatabaseManager export completed: ${s} total items`),e}catch(e){console.warn("‚ö†Ô∏è UnifiedDatabaseManager export failed, falling back to direct IndexedDB access:",e.message)}}console.log("üîÑ Using fallback IndexedDB export methods...");try{console.log("üîç Checking N8NMaster database...");const t=await this.getAllFromIndexedDBWithFallback("N8NMaster","projects");e.localProjects=t||[],console.log("üìÅ Local Projects exported:",e.localProjects.length,"items")}catch(t){console.warn("‚ö†Ô∏è Failed to export Local Projects:",t.message);try{const t=await this.getAllFromIndexedDBWithFallback("LocalProjectsDB","projects");e.localProjects=t||[],console.log("üìÅ Local Projects exported from fallback:",e.localProjects.length,"items")}catch(e){console.warn("‚ö†Ô∏è Fallback export also failed:",e.message)}}try{console.log("üîç Checking variables store...");const t=await this.getAllFromIndexedDBWithFallback("N8NMaster","variables");e.localVariables=t||[],console.log("üìù Local Variables exported:",e.localVariables.length,"items")}catch(t){console.warn("‚ö†Ô∏è Failed to export Local Variables:",t.message);try{const t=await this.getAllFromIndexedDBWithFallback("N8NMasterVariables","variables");e.localVariables=t||[],console.log("üìù Local Variables exported from fallback:",e.localVariables.length,"items")}catch(e){console.warn("‚ö†Ô∏è Variables fallback export also failed:",e.message)}}try{console.log("üîç Checking output templates store...");const t=await this.getAllFromIndexedDBWithFallback("N8NMaster","outputTemplates");e.outputTemplates=t||[],console.log("üìÑ Output Templates exported:",e.outputTemplates.length,"items")}catch(t){console.warn("‚ö†Ô∏è Failed to export Output Templates:",t.message);try{const t=await this.getAllFromIndexedDBWithFallback("LocalProjectsDB","outputTemplates");e.outputTemplates=t||[],console.log("üìÑ Output Templates exported from fallback:",e.outputTemplates.length,"items")}catch(e){console.warn("‚ö†Ô∏è Templates fallback export also failed:",e.message)}}console.log("‚ÑπÔ∏è Workflow History and Dialogs excluded from export");const t=e.localProjects.length+e.localVariables.length+e.outputTemplates.length;return console.log(`‚úÖ Unified IndexedDB export completed: ${t} total items`),e}catch(e){return console.error("‚ùå IndexedDB export failed:",e),{localProjects:[],localVariables:[],outputTemplates:[]}}}async getAllFromIndexedDB(e,t){return new Promise(((o,n)=>{const s=indexedDB.open(e);s.onerror=()=>{n(new Error(`Failed to open ${e}: ${s.error}`))},s.onsuccess=()=>{const a=s.result;if(!a.objectStoreNames.contains(t))return console.warn(`‚ö†Ô∏è Store ${t} not found in ${e}`),void o([]);const i=a.transaction([t],"readonly"),l=i.objectStore(t).getAll();l.onsuccess=()=>{const n=l.result;console.log(`üì¶ Retrieved ${n.length} items from ${e}.${t}`),o(n)},l.onerror=()=>{n(new Error(`Failed to read from ${e}.${t}: ${l.error}`))},i.onerror=()=>{n(new Error(`Transaction failed for ${e}.${t}: ${i.error}`))}},s.onupgradeneeded=()=>{console.warn(`‚ö†Ô∏è Database ${e} needs upgrade, but this is read-only operation`),o([])}}))}async getAllFromIndexedDBWithFallback(e,t){return new Promise(((o,n)=>{console.log(`üîç Attempting to open database: ${e}`);const s=indexedDB.open(e);s.onerror=()=>{const t=`Failed to open ${e}: ${s.error?.message||"Unknown error"}`;console.error("‚ùå",t),n(new Error(t))},s.onblocked=()=>{console.warn(`‚ö†Ô∏è Database ${e} is blocked`),setTimeout((()=>o([])),1e3)},s.onsuccess=()=>{const a=s.result;if(console.log(`‚úÖ Successfully opened ${e}. Available stores:`,Array.from(a.objectStoreNames)),!a.objectStoreNames.contains(t))return console.warn(`‚ö†Ô∏è Store ${t} not found in ${e}. Available: ${Array.from(a.objectStoreNames).join(", ")}`),a.close(),void o([]);try{const s=a.transaction([t],"readonly"),i=s.objectStore(t).getAll();i.onsuccess=()=>{const n=i.result||[];console.log(`üì¶ Successfully retrieved ${n.length} items from ${e}.${t}`),a.close(),o(n)},i.onerror=()=>{const o=`Failed to read from ${e}.${t}: ${i.error?.message||"Unknown error"}`;console.error("‚ùå",o),a.close(),n(new Error(o))},s.onerror=()=>{const o=`Transaction failed for ${e}.${t}: ${s.error?.message||"Unknown error"}`;console.error("‚ùå",o),a.close(),n(new Error(o))},s.onabort=()=>{console.warn(`‚ö†Ô∏è Transaction aborted for ${e}.${t}`),a.close(),o([])}}catch(o){console.error(`‚ùå Failed to create transaction for ${e}.${t}:`,o),a.close(),n(o)}},s.onupgradeneeded=t=>{console.warn(`‚ö†Ô∏è Database ${e} needs upgrade, but this is read-only operation`),t.target.result&&t.target.result.close(),o([])}}))}async handleFileSelect(e){const t=e.target.files[0],o=document.getElementById("file-info"),n=document.getElementById("import-btn"),s=document.getElementById("import-data-selection");if(t)try{document.getElementById("file-name").textContent=t.name,document.getElementById("file-size").textContent=this.formatFileSize(t.size),o.style.display="block";const e=await t.text(),a=JSON.parse(e);this.importData=a,this.analyzeImportData(a),s.style.display="block",n.disabled=!1,console.log("üì¶ Import file analyzed successfully")}catch(e){console.error("‚ùå Failed to parse import file:",e),this.showNotification("Invalid JSON file format","error"),s.style.display="none",n.disabled=!0}else o.style.display="none",s.style.display="none",n.disabled=!0,this.importData=null}formatFileSize(e){if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB"][t]}analyzeImportData(e){console.log("üîç Analyzing import data structure...");const t=e.chrome||{},o=t.sync||e.sync||{},n=t.local||e.local||{},s=e.indexedDB||{};this.updateImportOption("extension-settings",this.countExtensionSettings(o)),this.updateImportOption("extension-options",this.countExtensionOptions(o,n)),this.updateImportOption("ai-keys",this.countAIKeys(n)),this.updateImportOption("n8n-key",this.countN8NKey(n)),this.updateImportOption("output-templates",(s.outputTemplates||[]).length),this.updateImportOption("local-projects",(s.localProjects||[]).length),this.updateImportOption("local-variables",(s.localVariables||[]).length),console.log("‚úÖ Import data analysis completed")}countExtensionSettings(e){return["language","systemMessages","selectedModels","userPreferences"].filter((t=>void 0!==e[t])).length}countExtensionOptions(e,t){return["autoSave","showTemplates","nodeExecutionSelect","enableFeatures","uiSettings","notifications"].filter((e=>void 0!==t[e])).length}countAIKeys(e){const t=e.apiKeys||{};return Object.keys(t).filter((e=>t[e]&&t[e].trim().length>0)).length}countN8NKey(e){return e.n8nApiKey||e.n8nApiUrl?1:0}updateImportOption(e,t){const o=document.getElementById(`import-${e}`),n=document.getElementById(`${e}-count`);n&&(n.textContent=t,n.className="item-count "+(t>0?"has-data":"no-data")),o&&(o.disabled=0===t,0===t&&(o.checked=!1)),console.log(`üìä ${e}: ${t} items`)}selectAllImportOptions(){document.querySelectorAll('#import-data-selection input[type="checkbox"]').forEach((e=>{e.disabled||(e.checked=!0)})),console.log("‚úÖ All available import options selected")}deselectAllImportOptions(){document.querySelectorAll('#import-data-selection input[type="checkbox"]').forEach((e=>{e.checked=!1})),console.log("‚ùå All import options deselected")}async importSettings(){const e=document.getElementById("import-btn");if(this.importData)try{e.disabled=!0,e.textContent="Importing...",console.log("üîÑ Starting selective import process...");if(this.needsLicenseForImport()){if(!(await chrome.storage.local.get(["licenseActivated"])).licenseActivated)throw new Error("License activation is required for importing extension settings. Please activate your license first.");console.log("‚úÖ License validated for import")}const t=this.getSelectedImportOptions();if(console.log("üìã Selected import options:",t),0===t.length)throw new Error("No import options selected");const o=this.importData.chrome||{},n=o.sync||this.importData.sync||{},s=o.local||this.importData.local||{},a=this.importData.indexedDB||{};let i=0;if(t.includes("extension-settings")&&Object.keys(n).length>0){const e=this.filterExtensionSettings(n);Object.keys(e).length>0&&(await chrome.storage.sync.set(e),i++,console.log("‚úÖ Extension settings imported"))}if(t.includes("extension-options")){const e=this.filterExtensionOptions(n,s);Object.keys(e.sync).length>0&&await chrome.storage.sync.set(e.sync),Object.keys(e.local).length>0&&await chrome.storage.local.set(e.local),(Object.keys(e.sync).length>0||Object.keys(e.local).length>0)&&(i++,console.log("‚úÖ Extension options imported"))}if(t.includes("ai-keys")&&s.apiKeys){const e={...(await chrome.storage.local.get(["apiKeys"])).apiKeys,...s.apiKeys};await chrome.storage.local.set({apiKeys:e}),i++,console.log("‚úÖ AI API keys imported")}if(t.includes("n8n-key")){const e={};s.n8nApiKey&&(e.n8nApiKey=s.n8nApiKey),s.n8nApiUrl&&(e.n8nApiUrl=s.n8nApiUrl),Object.keys(e).length>0&&(await chrome.storage.local.set(e),i++,console.log("‚úÖ N8N API key imported"))}const l={};let r=!1;if(t.includes("output-templates")&&a.outputTemplates?.length>0&&(l.outputTemplates=a.outputTemplates,r=!0),t.includes("local-projects")&&a.localProjects?.length>0&&(l.localProjects=a.localProjects,r=!0),t.includes("local-variables")&&a.localVariables?.length>0&&(l.localVariables=a.localVariables,r=!0),r)try{const e=await this.importIndexedDBDataToN8NPage(l),t=(e.results?.projects||0)+(e.results?.variables||0)+(e.results?.templates||0);t>0&&(i++,console.log(`‚úÖ IndexedDB data imported to N8N page: ${t} items`))}catch(e){console.warn("‚ö†Ô∏è IndexedDB import to N8N page failed:",e.message),this.showNotification(`Warning: IndexedDB import failed - ${e.message}`,"warning")}console.log(`‚úÖ Selective import completed: ${i} categories imported`),this.showNotification(`Import completed: ${i} categories imported`,"success"),await this.loadSettings(),this.initializeUI()}catch(e){console.error("‚ùå Import failed:",e),this.showNotification("Import failed: "+e.message,"error")}finally{e.disabled=!1,e.textContent="Import Settings"}else this.showNotification("No import data available","error")}needsLicenseForImport(){const e=document.getElementById("import-extension-settings"),t=document.getElementById("import-extension-options");return e?.checked||t?.checked}getSelectedImportOptions(){const e=[];return document.querySelectorAll('#import-data-selection input[type="checkbox"]:checked').forEach((t=>{const o=t.id.replace("import-","");e.push(o)})),e}filterExtensionSettings(e){const t={};return["language","systemMessages","selectedModels","userPreferences"].forEach((o=>{void 0!==e[o]&&(t[o]=e[o])})),t}filterExtensionOptions(e,t){const o=[],n=["autoSave","showTemplates","nodeExecutionSelect","enableFeatures","uiSettings","notifications","localProjects","localVariables","n8nMasterInstalled","initialized","licenseActivated","rememberDialog"],s={},a={};return o.forEach((t=>{void 0!==e[t]&&(s[t]=e[t],console.log(`üìã Sync option '${t}' imported:`,e[t]))})),n.forEach((e=>{void 0!==t[e]&&(a[e]=t[e],console.log(`üìã Local option '${e}' imported:`,t[e]))})),Object.keys(e||{}).forEach((t=>{o.includes(t)||"boolean"!=typeof e[t]||(s[t]=e[t],console.log(`üìã Additional sync boolean '${t}' imported:`,e[t]))})),Object.keys(t||{}).forEach((e=>{n.includes(e)||"boolean"!=typeof t[e]||(a[e]=t[e],console.log(`üìã Additional local boolean '${e}' imported:`,t[e]))})),console.log("üìã Extension Options to import:",{sync:Object.keys(s),local:Object.keys(a)}),{sync:s,local:a}}async importIndexedDBDataToN8NPage(e){try{console.log("üì° Starting import to N8N page via content script...");const{activatedSites:t=[]}=await chrome.storage.local.get("activatedSites");if(0===t.length)throw new Error("No N8N sites have been activated. Please open N8N and activate the extension first.");console.log("‚úÖ Found activated sites:",t);const o=await this.findActivatedN8NTabs(t);if(0===o.length)throw new Error("No activated N8N pages are currently open. Please open one of your activated N8N sites.");console.log("‚úÖ Found active N8N tabs:",o.map((e=>e.url)));const n=await this.sendImportDataToN8NPage(o[0].id,e);return console.log("‚úÖ Import to N8N page completed:",n),n}catch(e){throw console.error("‚ùå Failed to import to N8N page:",e),e}}async sendImportDataToN8NPage(e,t){return new Promise(((o,n)=>{console.log("üì° Sending import data to N8N content script..."),chrome.tabs.sendMessage(e,{action:"checkN8nPage"},(s=>{chrome.runtime.lastError?n(new Error("Content script not loaded on this page. Please refresh the N8N page and make sure the extension is active.")):s&&s.success&&s.isN8nPage?(console.log("‚úÖ Content script confirmed active on N8N page"),chrome.tabs.sendMessage(e,{action:"importIndexedDBData",data:t},(e=>{chrome.runtime.lastError?n(new Error(`Failed to communicate with N8N page: ${chrome.runtime.lastError.message}`)):e?e.success?(console.log("‚úÖ Import successful on N8N page:",{projects:e.results?.projects||0,variables:e.results?.variables||0,templates:e.results?.templates||0,total:e.importedCount||0}),o(e)):n(new Error(`Import failed on N8N page: ${e.error||"Unknown error"}`)):n(new Error("No response from N8N page. Make sure the extension is active on the N8N page."))}))):n(new Error("This page is not a valid N8N workflow page. Please open a workflow page."))}))}))}getStoreNameForDataType(e){return{outputTemplates:"outputTemplates",localProjects:"projects",localVariables:"variables"}[e]||e}async importIndexedDBData(e){try{console.log("üóÑÔ∏è Starting IndexedDB import...");let t=0;if(window.UnifiedDatabaseManager){console.log("üîß Using UnifiedDatabaseManager for import...");try{if(e.localProjects&&e.localProjects.length>0){await window.UnifiedDatabaseManager.clearStore("projects");for(const t of e.localProjects)await window.UnifiedDatabaseManager.saveProject(t);t+=e.localProjects.length,console.log("üìÅ Projects imported via UnifiedDatabaseManager:",e.localProjects.length,"items")}if(e.localVariables&&e.localVariables.length>0){await window.UnifiedDatabaseManager.clearStore("variables");for(const t of e.localVariables)await window.UnifiedDatabaseManager.saveVariable(t);t+=e.localVariables.length,console.log("üìù Variables imported via UnifiedDatabaseManager:",e.localVariables.length,"items")}if(e.outputTemplates&&e.outputTemplates.length>0){await window.UnifiedDatabaseManager.clearStore("outputTemplates");for(const t of e.outputTemplates)await window.UnifiedDatabaseManager.saveOutputTemplate(t);t+=e.outputTemplates.length,console.log("üìÑ Templates imported via UnifiedDatabaseManager:",e.outputTemplates.length,"items")}return void console.log(`‚úÖ UnifiedDatabaseManager import completed: ${t} total items imported`)}catch(e){console.warn("‚ö†Ô∏è UnifiedDatabaseManager import failed, falling back to direct IndexedDB access:",e.message)}}if(console.log("üîÑ Using fallback IndexedDB import methods..."),e.localProjects&&e.localProjects.length>0)try{await this.importToIndexedDB("N8NMaster","projects",e.localProjects),t+=e.localProjects.length,console.log("üìÅ Local Projects imported:",e.localProjects.length,"items")}catch(e){console.warn("‚ö†Ô∏è Failed to import Local Projects:",e.message)}if(e.localVariables&&e.localVariables.length>0)try{await this.importToIndexedDB("N8NMaster","variables",e.localVariables),t+=e.localVariables.length,console.log("üìù Local Variables imported:",e.localVariables.length,"items")}catch(e){console.warn("‚ö†Ô∏è Failed to import Local Variables:",e.message)}if(e.outputTemplates&&e.outputTemplates.length>0)try{await this.importToIndexedDB("N8NMaster","outputTemplates",e.outputTemplates),t+=e.outputTemplates.length,console.log("üìÑ Output Templates imported:",e.outputTemplates.length,"items")}catch(e){console.warn("‚ö†Ô∏è Failed to import Output Templates:",e.message)}e.workflowHistory&&console.log("‚ÑπÔ∏è Workflow History found in export file but excluded from import"),console.log(`‚úÖ IndexedDB import completed: ${t} total items imported`)}catch(e){throw console.error("‚ùå IndexedDB import failed:",e),e}}async importToIndexedDB(e,t,o){return new Promise(((n,s)=>{const a=indexedDB.open(e);a.onerror=()=>{s(new Error(`Failed to open ${e}: ${a.error}`))},a.onsuccess=()=>{const i=a.result;if(!i.objectStoreNames.contains(t))return console.warn(`‚ö†Ô∏è Store ${t} not found in ${e}, skipping import`),void n();const l=i.transaction([t],"readwrite"),r=l.objectStore(t),c=r.clear();c.onsuccess=()=>{console.log(`üóëÔ∏è Cleared existing data from ${e}.${t}`);let a=0,i=!1;0!==o.length?o.forEach(((l,c)=>{const d=r.add(l);d.onsuccess=()=>{a++,a!==o.length||i||(console.log(`‚úÖ Successfully imported ${a} items to ${e}.${t}`),n())},d.onerror=()=>{console.error(`‚ùå Failed to import item ${c} to ${e}.${t}:`,d.error),i=!0,s(new Error(`Failed to import item ${c}: ${d.error}`))}})):n()},c.onerror=()=>{s(new Error(`Failed to clear ${e}.${t}: ${c.error}`))},l.onerror=()=>{s(new Error(`Transaction failed for ${e}.${t}: ${l.error}`))}},a.onupgradeneeded=()=>{console.warn(`‚ö†Ô∏è Database ${e} needs upgrade, but this is import operation`),s(new Error(`Database ${e} structure is incompatible`))}}))}async saveSettings(){try{const e={language:document.getElementById("language-select")?.value||"en",systemMessages:{optimize:document.getElementById("system-optimize")?.value||"",generatePrompt:document.getElementById("system-generate-prompt")?.value||"",generateCode:document.getElementById("system-generate-code")?.value||"",generateJSON:document.getElementById("system-generate-json")?.value||"",explainCode:document.getElementById("system-explain-code")?.value||"",generateWorkflow:document.getElementById("system-generate-workflow")?.value||""}},t={apiKeys:{openai:document.getElementById("openai-key")?.value||"",chatgpt:document.getElementById("openai-key")?.value||"",anthropic:document.getElementById("anthropic-key")?.value||"",openrouter:document.getElementById("openrouter-key")?.value||"",grok:document.getElementById("openrouter-key")?.value||""},n8nApiKey:document.getElementById("n8n-api-key")?.value||"",n8nApiUrl:document.getElementById("n8n-api-url")?.value||"",autoSave:!1!==document.getElementById("auto-save")?.checked,showTemplates:!1!==document.getElementById("show-templates")?.checked,nodeExecutionSelect:!1!==document.getElementById("node-execution-select")?.checked,notifications:!1!==document.getElementById("notifications")?.checked};await chrome.storage.sync.set(e),await chrome.storage.local.set(t),this.settings={...e,...t,openaiApiKey:t.apiKeys.openai,anthropicApiKey:t.apiKeys.anthropic,openrouterApiKey:t.apiKeys.openrouter},console.log("‚úÖ Settings saved to chrome.storage:"),console.log("  - Sync storage:",e),console.log("  - Local storage:",t),this.showNotification("Settings saved successfully","success")}catch(e){console.error("‚ùå Failed to save settings:",e),this.showNotification("Failed to save settings","error")}}initializeUI(){console.log("üé® Starting UI initialization..."),console.log("üîç Current settings:",this.settings);const e=document.getElementById("language-select");e?(e.value=this.settings.language,console.log("üåê Language selector set to:",this.settings.language)):console.error("‚ùå Language selector not found!");const t=document.getElementById("openai-key");t?(t.value=this.settings.openaiApiKey,console.log("üîë OpenAI key field set:",this.settings.openaiApiKey?"***PRESENT***":"EMPTY"),console.log("üîç OpenAI input element value:",t.value?"***PRESENT***":"EMPTY")):console.error("‚ùå OpenAI key input not found!");const o=document.getElementById("anthropic-key");o?(o.value=this.settings.anthropicApiKey,console.log("üîë Anthropic key field set:",this.settings.anthropicApiKey?"***PRESENT***":"EMPTY"),console.log("üîç Anthropic input element value:",o.value?"***PRESENT***":"EMPTY")):console.error("‚ùå Anthropic key input not found!");const n=document.getElementById("openrouter-key");n?(n.value=this.settings.openrouterApiKey,console.log("üîë OpenRouter key field set:",this.settings.openrouterApiKey?"***PRESENT***":"EMPTY"),console.log("üîç OpenRouter input element value:",n.value?"***PRESENT***":"EMPTY")):console.error("‚ùå OpenRouter key input not found!");const s=document.getElementById("auto-save");s&&(s.checked=this.settings.autoSave,console.log("‚öôÔ∏è Auto Save checkbox set to:",this.settings.autoSave));const a=document.getElementById("show-templates");a&&(a.checked=this.settings.showTemplates,console.log("‚öôÔ∏è Show Templates checkbox set to:",this.settings.showTemplates));const i=document.getElementById("node-execution-select");i&&(i.checked=this.settings.nodeExecutionSelect,console.log("‚öôÔ∏è Node Execution Select checkbox set to:",this.settings.nodeExecutionSelect));const l=document.getElementById("notifications");l&&(l.checked=this.settings.notifications,console.log("‚öôÔ∏è Notifications checkbox set to:",this.settings.notifications));const r=document.getElementById("n8n-api-key");r&&(r.value=this.settings.n8nApiKey,console.log("üîë N8N API Key field set:",this.settings.n8nApiKey?"***PRESENT***":"EMPTY"));const c=document.getElementById("n8n-api-url");c&&(c.value=this.settings.n8nApiUrl,console.log("üåê N8N API URL field set:",this.settings.n8nApiUrl||"EMPTY")),this.settings.systemMessages?(console.log("üìù Setting system messages:",Object.keys(this.settings.systemMessages).length,"keys"),Object.keys(this.settings.systemMessages).forEach((e=>{const t=`system-${e.replace(/([A-Z])/g,"-$1").toLowerCase()}`,o=document.getElementById(t);o?(o.value=this.settings.systemMessages[e],console.log(`üìù System message '${e}' set:`,this.settings.systemMessages[e]?"PRESENT":"EMPTY")):console.warn(`‚ö†Ô∏è System message element '${t}' not found`)}))):console.log("üìù No system messages to set"),console.log("‚úÖ UI initialization completed"),this.initializeReviewBlock(),setTimeout((()=>{this.initializeModelSelectors()}),500)}initializeReviewBlock(){try{const e=this.detectBrowser();console.log("üîç Detected browser:",e);const t=document.getElementById("chrome-store-link"),o=document.getElementById("edge-store-link"),n=document.querySelector(".or-divider");"chrome"===e?(t&&(t.style.display="inline-flex"),o&&(o.style.display="none"),n&&(n.style.display="none")):"edge"===e?(o&&(o.style.display="inline-flex"),t&&(t.style.display="none"),n&&(n.style.display="none")):(t&&(t.style.display="inline-flex"),o&&(o.style.display="inline-flex"),n&&(n.style.display="block")),console.log("‚úÖ Review block initialized for browser:",e)}catch(e){console.error("‚ùå Failed to initialize review block:",e)}}detectBrowser(){const e=navigator.userAgent.toLowerCase();return e.includes("edg/")||e.includes("edge/")?"edge":e.includes("chrome/")&&!e.includes("edg/")?"chrome":e.includes("firefox/")?"firefox":e.includes("safari/")&&!e.includes("chrome/")?"safari":e.includes("opr/")||e.includes("opera/")?"opera":"unknown"}async loadAboutInfo(){try{let e=(await chrome.storage.local.get(["deviceId"])).deviceId;e||(e=crypto.randomUUID(),await chrome.storage.local.set({deviceId:e}));const t=document.getElementById("device-id");t&&(t.textContent=e,console.log("‚úÖ Device ID loaded and displayed:",e))}catch(e){console.error("‚ùå Failed to load device ID:",e)}try{const e=await chrome.storage.local.get(["licenseInfo","licenseActivated","licenseKey","licenseValidatedAt"]),t=e.licenseActivated?"Activated":"Not Activated",o=e.licenseKey||"N/A";let n="N/A";e.licenseValidatedAt&&"number"==typeof e.licenseValidatedAt&&e.licenseValidatedAt>0?(n=new Date(e.licenseValidatedAt).toLocaleDateString(),console.log("‚úÖ Activation date loaded from licenseValidatedAt:",n)):console.log("‚ö†Ô∏è No valid licenseValidatedAt found");const s=document.getElementById("license-status"),a=document.getElementById("license-key"),i=document.getElementById("activation-date");s&&(s.textContent=t),a&&(a.textContent=o),i&&(i.textContent=n)}catch(e){console.error("‚ùå Failed to load license info:",e)}}showNotification(e,t="info"){const o=document.getElementById("notification");o&&(o.textContent=e,o.className=`notification ${t}`,o.classList.add("show"),setTimeout((()=>{o.classList.remove("show")}),3e3))}async loadModels(e,t){try{console.log(`üîÑ Loading models for ${e}...`);const o=await this.fetchModels(e,t);o&&o.length>0?(this.modelsCache[e]=o,this.populateModelSelector(e,o),this.showModelSelector(e),console.log(`‚úÖ Loaded ${o.length} models for ${e}`)):console.warn(`‚ö†Ô∏è No models found for ${e}`)}catch(t){console.error(`‚ùå Failed to load models for ${e}:`,t)}}async fetchModels(e,t){const o={openai:"https://api.openai.com/v1/models",anthropic:"https://api.anthropic.com/v1/models",openrouter:"https://openrouter.ai/api/v1/models"},n={openai:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},anthropic:{"x-api-key":t,"anthropic-version":"2023-06-01","Content-Type":"application/json"},openrouter:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"}};try{const t=await fetch(o[e],{method:"GET",headers:n[e]});if(!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`);const s=await t.json();return"openai"===e?s.data?.map((e=>({id:e.id,name:e.id})))||[]:"anthropic"===e?s.data?.map((e=>({id:e.id,name:e.display_name||e.id})))||[]:"openrouter"===e&&s.data?.map((e=>({id:e.id,name:e.name||e.id})))||[]}catch(t){return console.error(`Failed to fetch models for ${e}:`,t),[]}}populateModelSelector(e,t){const o=document.getElementById(`${e}-model`);if(!o)return;o.innerHTML="";const n=document.createElement("option");n.value=this.defaultModels[e],n.textContent=`${this.getModelDisplayName(e,this.defaultModels[e])} (Default)`,o.appendChild(n),t.forEach((t=>{if(t.id!==this.defaultModels[e]){const e=document.createElement("option");e.value=t.id,e.textContent=t.name,o.appendChild(e)}})),this.loadSavedModel(e)}getModelDisplayName(e,t){return{"gpt-4o":"GPT-4o","claude-sonnet-4-20250514":"Claude 4 Sonnet","claude-opus-4-20250514":"Claude 4 Opus","x-ai/grok-3-beta":"Grok 3 beta"}[t]||t}showModelSelector(e){const t=document.getElementById(`${e}-model-group`);t&&(t.style.display="block")}async loadSavedModel(e){try{const t=(await chrome.storage.local.get(["selectedModels"])).selectedModels||{};if(t[e]){const o=document.getElementById(`${e}-model`);o&&(o.value=t[e],console.log(`üìù Loaded saved model for ${e}: ${t[e]}`))}}catch(t){console.error(`‚ùå Failed to load saved model for ${e}:`,t)}}async onModelChange(e,t){try{const o=(await chrome.storage.local.get(["selectedModels"])).selectedModels||{};o[e]=t,await chrome.storage.local.set({selectedModels:o}),console.log(`üíæ Saved model selection for ${e}: ${t}`),this.showNotification(`Model updated: ${t}`,"success")}catch(t){console.error(`‚ùå Failed to save model selection for ${e}:`,t),this.showNotification("Failed to save model selection","error")}}async initializeModelSelectors(){for(const e of["openai","anthropic","openrouter"]){const t=this.settings[`${e}ApiKey`];t&&(console.log(`üîß Initializing models for ${e} (API key present)`),await this.loadModels(e,t))}}}document.addEventListener("DOMContentLoaded",(()=>{(new OptionsManager).init()})),window.OptionsManager=OptionsManager;