const GitHubDownloader={baseUrl:"https://raw.githubusercontent.com/djeknet/n8n-master-workflows/refs/heads/master/",downloadCache:new Map,async downloadWorkflow(t){try{if(this.downloadCache.has(t))return this.downloadCache.get(t);const e=this.baseUrl+encodeURIComponent(t),o=await fetch(e);if(!o.ok)throw new Error(`HTTP ${o.status}: ${o.statusText}`);const a=await o.text();if(!a||0===a.trim().length)throw new Error("Downloaded file is empty");let n;try{const e=JSON.parse(a);n=this.isValidN8nWorkflow(e)?{success:!0,workflow:e,source:"github",filePath:t,type:"json",downloadedAt:(new Date).toISOString()}:{success:!0,workflow:e,source:"github",filePath:t,type:"json_unknown",downloadedAt:(new Date).toISOString()}}catch(e){n={success:!0,workflow:a,source:"github",filePath:t,type:"text",downloadedAt:(new Date).toISOString()}}return this.downloadCache.set(t,n),n}catch(e){return{success:!1,error:e.message,filePath:t,downloadedAt:(new Date).toISOString()}}},isValidN8nWorkflow(t){if(!t||"object"!=typeof t)return!1;const e=["nodes"];for(const o of e)if(!t.hasOwnProperty(o))return!1;if(!Array.isArray(t.nodes))return!1;if(0===t.nodes.length)return!1;for(const e of t.nodes)if(!e.id||!e.name||!e.type)return!1;return!0},async downloadMultipleWorkflows(t,e=3){const o=[];for(let a=0;a<t.length;a+=e){const n=t.slice(a,a+e).map((async t=>({template:t,download:await this.downloadWorkflow(t.filePath)}))),r=await Promise.all(n);o.push(...r),a+e<t.length&&await new Promise((t=>setTimeout(t,500)))}return o},clearCache(){this.downloadCache.clear()},getCacheStats(){return{size:this.downloadCache.size,entries:Array.from(this.downloadCache.keys())}},async preloadPopularTemplates(){const t=["OpenAI_and_LLMs/AI chatbot that can search the web.txt","Telegram/Telegram AI bot with LangChain nodes.txt","Gmail_and_Email_Automation/Gmail AI Auto-Responder_ Create Draft Replies to incoming emails.txt"];for(const e of t)try{await this.downloadWorkflow(e)}catch(t){}}};window.GitHubDownloader=GitHubDownloader;