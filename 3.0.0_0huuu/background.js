async function getSelectedModel(e){try{const t=(await chrome.storage.local.get(["selectedModels"])).selectedModels||{},n={openai:"gpt-4o",chatgpt:"gpt-4o",anthropic:"claude-sonnet-4-20250514",gemini:"google/gemini-2.5-flash-preview-05-20",openrouter:"x-ai/grok-3-beta"};return t[e]||n[e]}catch(t){return{openai:"gpt-4o",chatgpt:"gpt-4o",anthropic:"claude-sonnet-4-20250514",gemini:"google/gemini-2.5-flash-preview-05-20",openrouter:"x-ai/grok-3-beta"}[e]||"gpt-4o"}}const CONTEXT_MENU_ITEMS=[{id:"optimize-prompt",title:"Optimize Prompt"},{id:"generate-prompt",title:"Generate Prompt"},{id:"generate-code",title:"Generate Code"},{id:"generate-json",title:"Generate JSON"},{id:"generate-curl",title:"Generate cURL"},{id:"fix-json",title:"Fix JSON"},{id:"explain-code",title:"Explain Code"}];function shouldShowWelcomeOnUpdate(e,t){return!0}chrome.runtime.onInstalled.addListener((async e=>{const t=chrome.runtime.getManifest();if("update"===e.reason)try{const e=await chrome.storage.local.get("lastKnownVersion");if(await chrome.storage.local.set({lastKnownVersion:t.version}),e.lastKnownVersion===t.version)return}catch(e){}const n="N8N Master - Workflow Assistant"===t.name||"__MSG_appName__"===t.name||t.name&&t.name.includes("N8N Master"),o=t.web_accessible_resources&&t.web_accessible_resources.some((e=>e.resources&&e.resources.includes("welcome.html")));if(n&&o){if("install"===e.reason)await chrome.storage.local.set({initialized:!0,activatedSites:[],aiProvider:"chatgpt",apiKeys:{}}),chrome.tabs.create({url:chrome.runtime.getURL("welcome.html")});else if("update"===e.reason){const t=chrome.runtime.getManifest().version;shouldShowWelcomeOnUpdate(e.previousVersion,t)&&chrome.tabs.create({url:chrome.runtime.getURL("welcome.html")})}createContextMenu(),setupDailyLicenseCheck()}})),chrome.runtime.onStartup.addListener((()=>{createContextMenu()})),globalThis.recreateContextMenu=function(){return createContextMenu(),"Context menu recreation initiated. Check console for details."},chrome.runtime.onSuspend.addListener((()=>{})),chrome.contextMenus.onClicked.addListener((async(e,t)=>{}));let menuCreationAttempts=0;function createContextMenu(){menuCreationAttempts++,chrome.contextMenus&&chrome.contextMenus.removeAll((e=>{chrome.runtime.lastError,setTimeout((()=>{chrome.contextMenus.create({id:"n8n-master-parent",title:"N8N Master",contexts:["selection","editable"]},(e=>{if(chrome.runtime.lastError)return void createContextMenuFallback();let t=0,n=0;CONTEXT_MENU_ITEMS.forEach(((e,o)=>{setTimeout((()=>{chrome.contextMenus.create({id:e.id,parentId:"n8n-master-parent",title:e.title,contexts:["selection","editable"]},(e=>{chrome.runtime.lastError?n++:t++,t+n===CONTEXT_MENU_ITEMS.length&&(CONTEXT_MENU_ITEMS.length,setTimeout((()=>verifyContextMenu()),1e3))}))}),100*o)}))}))}),100)}))}function createContextMenuFallback(){CONTEXT_MENU_ITEMS.forEach(((e,t)=>{setTimeout((()=>{chrome.contextMenus.create({id:`n8n-master-${e.id}`,title:`N8N Master: ${e.title}`,contexts:["selection","editable"]},(()=>{chrome.runtime.lastError?0:0,CONTEXT_MENU_ITEMS.length}))}),100*t)}))}function verifyContextMenu(){chrome.contextMenus.update("n8n-master-parent",{title:"N8N Master"},(()=>{chrome.runtime.lastError&&setTimeout((()=>createContextMenu()),2e3)}))}function ensureContextMenuExists(){return new Promise((e=>{chrome.contextMenus.removeAll((()=>{createContextMenu(),setTimeout(e,100)}))}))}function getActionText(e){const t={"optimize-prompt":"contextMenuOptimizingPrompt","generate-prompt":"contextMenuGeneratingPrompt","generate-code":"contextMenuGeneratingCode","generate-json":"contextMenuGeneratingJson","generate-curl":"contextMenuGeneratingCurl","fix-json":"contextMenuFixingJson","explain-code":"contextMenuAnalyzingCode"}[e]||"contextMenuProcessing";return chrome.i18n.getMessage(t)||"processing"}function getSuccessMessage(e){const t={"optimize-prompt":"contextMenuPromptOptimized","generate-prompt":"contextMenuPromptGenerated","generate-code":"contextMenuCodeGenerated","generate-json":"contextMenuJsonGenerated","generate-curl":"contextMenuCurlGenerated","fix-json":"contextMenuJsonFixed","explain-code":"contextMenuCodeExplained"}[e]||"contextMenuOperationCompleted";return chrome.i18n.getMessage(t)||"Operation completed successfully!"}async function processWithAI(e,t,n){const{aiProvider:o,apiKeys:a}=n,s=a[o],r=await generatePrompt(e,t);let i;if("openai"===o||"chatgpt"===o)i=await callOpenAI(r,s);else if("anthropic"===o)i=await callAnthropic(r,s);else if("gemini"===o)i=await callGemini(r,s);else{if("openrouter"!==o)throw new Error("Unsupported AI provider");i=await callOpenrouter(r,s)}return"generate-workflow"===e||"create-workflow"===e?cleanupWorkflowJson(i):i}function cleanupResponse(e,t){switch(e){case"generate-json":case"fix-json":let e=t.replace(/```json\s*/g,"").replace(/```\s*/g,"").trim();try{const t=JSON.parse(e);return JSON.stringify(t,null,2)}catch(t){return e}case"generate-code":return t.replace(/```javascript\s*/g,"").replace(/```js\s*/g,"").replace(/```\s*/g,"").trim();case"generate-curl":return t.replace(/```bash\s*/g,"").replace(/```shell\s*/g,"").replace(/```\s*/g,"").trim();default:return t}}function getLanguageInstructions(e){const t={ru:"ВАЖНО: Отвечай на русском языке. Все объяснения, комментарии и описания должны быть на русском языке.",en:"IMPORTANT: Respond in English. All explanations, comments and descriptions should be in English.",de:"WICHTIG: Antworten Sie auf Deutsch. Alle Erklärungen, Kommentare und Beschreibungen sollten auf Deutsch sein.",es:"IMPORTANTE: Responde en español. Todas las explicaciones, comentarios y descripciones deben estar en español.",fr:"IMPORTANT: Répondez en français. Toutes les explications, commentaires et descriptions doivent être en français.",it:"IMPORTANTE: Rispondi in italiano. Tutte le spiegazioni, i commenti e le descrizioni devono essere in italiano.",pt:"IMPORTANTE: Responda em português. Todas as explicações, comentários e descrições devem estar em português.",zh:"重要提示：用中文回答。所有解释、注释和描述都应该用中文。",ja:"重要：日本語で回答してください。すべての説明、コメント、記述は日本語で行ってください。",ko:"중요: 한국어로 답변하세요. 모든 설명, 주석, 설명은 한국어로 작성해야 합니다.",pl:"WAŻNE: Odpowiadaj po polsku. Wszystkie wyjaśnienia, komentarze i opisy powinny być po polsku.",tr:"ÖNEMLİ: Türkçe yanıt verin. Tüm açıklamalar, yorumlar ve tanımlar Türkçe olmalıdır.",ar:"مهم: أجب باللغة العربية. يجب أن تكون جميع التفسيرات والتعليقات والأوصاف باللغة العربية.",hi:"महत्वपूर्ण: हिंदी में उत्तर दें। सभी व्याख्याएं, टिप्पणियां और विवरण हिंदी में होने चाहिए।",uk:"ВАЖЛИВО: Відповідайте українською мовою. Усі пояснення, коментарі та описи повинні бути українською мовою.",cs:"DŮLEŽITÉ: Odpovídejte v češtině. Všechna vysvětlení, komentáře a popisy by měly být v češtině.",nl:"BELANGRIJK: Antwoord in het Nederlands. Alle uitleg, opmerkingen en beschrijvingen moeten in het Nederlands zijn.",sv:"VIKTIGT: Svara på svenska. Alla förklaringar, kommentarer och beskrivningar ska vara på svenska.",da:"VIGTIGT: Svar på dansk. Alle forklaringer, kommentarer og beskrivelser skal være på dansk.",no:"VIKTIG: Svar på norsk. Alle forklaringer, kommentarer og beskrivelser skal være på norsk.",fi:"TÄRKEÄÄ: Vastaa suomeksi. Kaikkien selitysten, kommenttien ja kuvausten tulee olla suomeksi."};return t[e]||t.en}async function getCustomSystemMessage(e){try{const t=(await chrome.storage.sync.get(["systemMessages"])).systemMessages||{},n={"optimize-prompt":"optimize","generate-prompt":"generatePrompt","generate-code":"generateCode","generate-json":"generateJSON","fix-json":"generateJSON","explain-code":"explainCode","generate-workflow":"generateWorkflow"}[e];return(n?t[n]:"")||""}catch(e){return""}}async function generatePrompt(e,t){let n={"optimize-prompt":`You are an expert prompt engineer. Optimize this prompt for AI agents to make it more concise, clear, and effective while preserving the core intent and improving results.\n\n${getLanguageInstructions(t.language)}\n\nOriginal prompt:\n${t.text}\n\nReturn only the optimized prompt without explanations.`,"generate-prompt":`You are an expert prompt engineer. Create a detailed, comprehensive prompt for an AI agent based on this description: "${t.text}".\n\n${getLanguageInstructions(t.language)}\n\nInclude:\n- Clear role definition\n- Specific instructions and constraints\n- Input/output format specifications\n- 2-3 concrete examples\n- Best practices and guidelines\n\nReturn only the complete prompt without explanations.`,"generate-code":`You are an expert n8n developer. Generate JavaScript code for an n8n Code node based on this description.\n\n${getLanguageInstructions(t.language)}\n\nDescription: ${t.text}\n\nRequirements:\n- Use n8n patterns: $input.all(), $input.first(), etc.\n- Handle multiple items properly\n- Include proper error handling\n- Return items in correct format: return items.map(item => ({ json: {...} }))\n- Add helpful comments\n\nReturn only the JavaScript code without explanations or markdown formatting.`,"generate-json":`Generate a proper JSON structure based on this description: "${t.text}".\n\n${getLanguageInstructions(t.language)}\n\nRequirements:\n- Use realistic sample data (not placeholders)\n- Follow proper JSON syntax\n- Include appropriate data types\n- Use meaningful values\n\nReturn only valid JSON without explanations.`,"generate-curl":`Convert this n8n HTTP Request node configuration to a cURL command:\n\n${t.text}\n\nReturn only the complete cURL command without explanations.`,"fix-json":`Fix the JSON syntax errors in this text and return only the corrected, properly formatted JSON.\n\n${getLanguageInstructions(t.language)}\n\nJSON to fix:\n${t.text}\n\nReturn only the corrected JSON without explanations.`,"explain-code":`You are an expert code analyst and teacher. Analyze this code and explain what it does in a clear, comprehensive way.\n\n${getLanguageInstructions(t.language)}\n\nCode to analyze:\n${t.text}\n\nPlease provide:\n1. **Overview**: What does this code do in n8n in general?\n2. **Step-by-step breakdown**: Explain each major section/function\n3. **Key concepts**: Highlight important programming concepts used\n4. **Purpose**: What problem does this solve?\n5. **Improvements**: Any suggestions for optimization or best practices specifically for n8n (if applicable)\n\nMake your explanation clear and educational, suitable for developers who want to understand the code's functionality.`,chat:`You are N8N Master, an expert AI assistant specialized in n8n workflow automation. You help users understand, optimize, and troubleshoot their n8n workflows.\n\n${getLanguageInstructions(t.language)}\n\nContext: ${t.text}\n\nProvide helpful, accurate, and actionable advice. If analyzing workflows or nodes, be specific about what each component does and suggest improvements when relevant.`}[e]||t.text;const o=await getCustomSystemMessage(e);return o&&o.trim()&&(n+=`\n\n📝 ADDITIONAL CUSTOM INSTRUCTIONS:\n${o.trim()}`),n}function supportsMaxTokens(e){return!["o1","o1-preview","o1-mini","o3","o3-mini","o3-preview"].some((t=>e.includes(t)))}async function callOpenAI(e,t){const n=await getSelectedModel("openai"),o={model:n,messages:[{role:"user",content:e}]};supportsMaxTokens(n)&&(o.max_tokens=2e3,o.temperature=.7);const a=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(o)});if(!a.ok){const e=await a.json();throw new Error(e.error?.message||"OpenAI API request failed")}return(await a.json()).choices[0].message.content.trim()}async function callAnthropic(e,t){const n=await getSelectedModel("anthropic"),o=await fetch("https://api.anthropic.com/v1/messages",{method:"POST",headers:{"x-api-key":t,"anthropic-version":"2023-06-01","Content-Type":"application/json","anthropic-dangerous-direct-browser-access":"true"},body:JSON.stringify({model:n,max_tokens:2e3,messages:[{role:"user",content:e}]})});if(!o.ok){let e;try{const t=await o.json();e=t.error?.message||t.message||`HTTP ${o.status}`}catch(t){const n=await o.text();e=`HTTP ${o.status}: ${n.substring(0,100)}`}throw new Error(e)}return(await o.json()).content[0].text.trim()}async function callGeminiForTemplateSelection(e,t){const n=await getSelectedModel("gemini"),o=await fetch("https://openrouter.ai/api/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json","HTTP-Referer":"https://n8n-master-extension","X-Title":"N8N Master Extension"},body:JSON.stringify({model:n,max_tokens:500,temperature:.1,messages:[{role:"user",content:e}]})});if(!o.ok){let e;try{const t=await o.json();e=t.error?.message||t.message||`HTTP ${o.status}`}catch(t){const n=await o.text();e=`HTTP ${o.status}: ${n.substring(0,100)}`}throw new Error(e)}return(await o.json()).choices[0].message.content.trim()}async function callGemini(e,t){const n=await getSelectedModel("gemini"),o=await fetch("https://openrouter.ai/api/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json","HTTP-Referer":"https://n8n-master-extension","X-Title":"N8N Master Extension"},body:JSON.stringify({model:n,max_tokens:2e3,messages:[{role:"user",content:e}]})});if(!o.ok){let e;try{const t=await o.json();e=t.error?.message||t.message||`HTTP ${o.status}`}catch(t){const n=await o.text();e=`HTTP ${o.status}: ${n.substring(0,100)}`}throw new Error(e)}return(await o.json()).choices[0].message.content.trim()}async function callOpenrouter(e,t){const n=await getSelectedModel("openrouter"),o=await fetch("https://openrouter.ai/api/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json","HTTP-Referer":"https://n8n-master-extension","X-Title":"N8N Master Extension"},body:JSON.stringify({model:n,max_tokens:2e3,messages:[{role:"user",content:e}]})});if(!o.ok){let e;try{const t=await o.json();e=t.error?.message||t.message||`HTTP ${o.status}`}catch(t){const n=await o.text();e=`HTTP ${o.status}: ${n.substring(0,100)}`}throw new Error(e)}return(await o.json()).choices[0].message.content.trim()}async function callOpenrouterForTemplateSelection(e,t){const n=await getSelectedModel("openrouter"),o=await fetch("https://openrouter.ai/api/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json","HTTP-Referer":"https://n8n-master-extension","X-Title":"N8N Master Extension"},body:JSON.stringify({model:n,max_tokens:500,temperature:.1,messages:[{role:"user",content:e}]})});if(!o.ok){let e;try{const t=await o.json();e=t.error?.message||t.message||`HTTP ${o.status}`}catch(t){const n=await o.text();e=`HTTP ${o.status}: ${n.substring(0,100)}`}throw new Error(e)}return(await o.json()).choices[0].message.content.trim()}async function callOpenAIWithHistory(e,t,n=[]){const o=await getSelectedModel("openai"),a=[];n&&n.length>0&&a.push(...n),a.push({role:"user",content:e});const s={model:o,messages:a};supportsMaxTokens(o)&&(s.max_tokens=3e3);const r=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify(s)});if(!r.ok){let e;try{const t=await r.json();e=t.error?.message||`HTTP ${r.status}`}catch(t){const n=await r.text();e=`HTTP ${r.status}: ${n.substring(0,100)}`}throw new Error(e)}return(await r.json()).choices[0].message.content.trim()}async function callAnthropicWithHistory(e,t,n=[]){const o=await getSelectedModel("anthropic"),a=[];n&&n.length>0&&a.push(...n),a.push({role:"user",content:e});const s=await fetch("https://api.anthropic.com/v1/messages",{method:"POST",headers:{"x-api-key":t,"anthropic-version":"2023-06-01","content-type":"application/json","anthropic-dangerous-direct-browser-access":"true"},body:JSON.stringify({model:o,max_tokens:3e3,messages:a})});if(!s.ok){let e;try{const t=await s.json();e=t.error?.message||t.message||`HTTP ${s.status}`}catch(t){const n=await s.text();e=`HTTP ${s.status}: ${n.substring(0,100)}`}throw new Error(e)}return(await s.json()).content[0].text.trim()}async function callGeminiWithHistory(e,t,n=[]){const o=[];n&&n.length>0&&n.forEach((e=>{o.push({role:"assistant"===e.role?"model":"user",parts:[{text:e.content}]})})),o.push({role:"user",parts:[{text:e}]});const a=await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${t}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:o,generationConfig:{maxOutputTokens:3e3,temperature:.7}})});if(!a.ok){let e;try{const t=await a.json();e=t.error?.message||t.message||`HTTP ${a.status}`}catch(t){const n=await a.text();e=`HTTP ${a.status}: ${n.substring(0,100)}`}throw new Error(e)}return(await a.json()).candidates[0].content.parts[0].text.trim()}async function callOpenrouterWithHistory(e,t,n=[]){const o=await getSelectedModel("openrouter"),a=[];n&&n.length>0&&a.push(...n),a.push({role:"user",content:e});const s=await fetch("https://openrouter.ai/api/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json","HTTP-Referer":"https://n8n-master-extension","X-Title":"N8N Master Extension"},body:JSON.stringify({model:o,max_tokens:3e3,messages:a})});if(!s.ok){let e;try{const t=await s.json();e=t.error?.message||t.message||`HTTP ${s.status}`}catch(t){const n=await s.text();e=`HTTP ${s.status}: ${n.substring(0,100)}`}throw new Error(e)}return(await s.json()).choices[0].message.content.trim()}async function showNotification(e,t,n){await chrome.scripting.executeScript({target:{tabId:e},function:displayNotification,args:[t,n]})}async function showPersistentNotification(e,t,n){await chrome.scripting.executeScript({target:{tabId:e},function:displayPersistentNotification,args:[t,n]})}async function hideNotification(e){await chrome.scripting.executeScript({target:{tabId:e},function:hideNotificationElement})}function getContextData(e,t="en"){const n=window.getSelection().toString().trim(),o=document.activeElement;let a=n,s=null,r=null;if(r=window.n8nMasterContextTarget?window.n8nMasterContextTarget:o,a);else if(r)if("INPUT"===r.tagName||"TEXTAREA"===r.tagName||"true"===r.contentEditable)a=r.value||r.textContent||r.innerText;else if(r.className&&(r.className.includes("cm-line")||r.className.includes("cm-content"))){let e=r;for(;e&&!e.className.includes("cm-editor");)e=e.parentElement;if(e){const t=e.querySelector(".cm-content");if(t)a=t.textContent||t.innerText;else{const t=e.querySelectorAll(".cm-line");a=Array.from(t).map((e=>e.textContent||"")).join("\n")}r=e}}else(r.textContent||r.innerText)&&(a=r.textContent||r.innerText);if(r&&("INPUT"===r.tagName||"TEXTAREA"===r.tagName||"true"===r.contentEditable||r.className&&r.className.includes("cm-editor"))&&(s={tagName:r.tagName,type:r.type,isContentEditable:"true"===r.contentEditable,isCodeMirror:r.className&&r.className.includes("cm-editor"),selectionStart:r.selectionStart,selectionEnd:r.selectionEnd,id:r.id,className:r.className,elementSelector:function(e){if(!e)return null;if(e.id)return`#${e.id}`;if(e.className){const t=e.className.split(" ").filter((e=>e.trim()));if(t.length>0)return`.${t.join(".")}`}const t=e.getAttribute("data-test-id");if(t)return`[data-test-id="${t}"]`;const n=Array.from(e.parentNode?.children||[]).filter((t=>t.tagName===e.tagName)).indexOf(e);return`${e.tagName.toLowerCase()}:nth-of-type(${n+1})`}(r)}),window.n8nMasterContextTarget=null,"generate-curl"===e)try{const e=['[data-test-id="node-parameters"]',".node-parameters",'[data-test-id="parameter-input-container"]',".parameter-input-list",".ndv-wrapper"];let t=null;for(const n of e)if(t=document.querySelector(n),t)break;if(t){let e="GET";try{const n=Array.from(t.querySelectorAll('input[type="text"]'));for(const t of n)if(["GET","POST","PUT","DELETE","PATCH","HEAD","OPTIONS"].includes(t.value)){e=t.value;break}}catch(e){}let n="";try{const e=Array.from(t.querySelectorAll('input[type="text"]'));for(const t of e)if(t.value&&(t.value.startsWith("http://")||t.value.startsWith("https://"))){n=t.value;break}}catch(e){}let o="";try{const e=Array.from(t.querySelectorAll('input[type="text"]')),n=[];for(let t=0;t<e.length-1;t++){const o=e[t],a=e[t+1];if(o.value&&a.value&&o.value.trim()&&a.value.trim()){const e=o.value.trim(),t=a.value.trim(),s=["accept","authorization","content-type","content-length","user-agent","host","referer","cookie","cache-control","pragma","expires","last-modified","etag","if-match","if-none-match","if-modified-since","if-unmodified-since","range","content-range","accept-encoding","accept-language","accept-charset","connection","upgrade","origin","x-requested-with"];!(e.includes("-")||e.toLowerCase().includes("key")||e.toLowerCase().includes("auth")||e.toLowerCase().includes("content")||e.startsWith("X-")||e.toLowerCase().startsWith("x-")||e.includes("API")||s.includes(e.toLowerCase()))||e.includes("http")||t.includes("http")||["GET","POST","PUT","DELETE","PATCH"].includes(e)||["GET","POST","PUT","DELETE","PATCH"].includes(t)||"Using Fields Below"===e||"Using Fields Below"===t||"None"===e||"None"===t||"JSON"===e||"JSON"===t||n.push(`${e}: ${t}`)}}n.length>0&&(o=n.join("\n"))}catch(e){}let s="";try{const e=Array.from(t.querySelectorAll('input[type="text"]')),n=[],o=["accept","authorization","content-type","content-length","user-agent","host","referer","cookie","cache-control","pragma","expires","last-modified","etag","if-match","if-none-match","if-modified-since","if-unmodified-since","range","content-range","accept-encoding","accept-language","accept-charset","connection","upgrade","origin","x-requested-with"];for(let t=0;t<e.length-1;t++){const a=e[t],s=e[t+1];if(a.value&&s.value&&a.value.trim()&&s.value.trim()){const e=a.value.trim(),t=s.value.trim();if("POST"===e||"GET"===e||"PUT"===e||"DELETE"===e||e.includes("http")||t.includes("http")||e.includes("-")||e.includes("Key")||e.includes("API")||e.toLowerCase().startsWith("x-")||o.includes(e.toLowerCase())||"None"===e||"JSON"===e||"Using Fields Below"===e||"Using JSON"===e||"Using Fields Below"===t||"Using JSON"===t||"None"===t||"JSON"===t||e.length>50||t.length>100)continue;e.length<=20&&t.length<=50&&!e.includes(" ")&&e.match(/^[a-zA-Z0-9_-]+$/)&&n.push(`${e}=${encodeURIComponent(t)}`)}}n.length>0&&(s=n.join("&"))}catch(e){}let r="";try{const e=Array.from(t.querySelectorAll("textarea"));for(let t=0;t<e.length;t++){const n=e[t];if(n.value&&n.value.trim()){const e=n.value.trim();if(e.startsWith("{")&&e.endsWith("}")){r=e;break}if(e.length>0){r=e;break}}}if(!r){const e=Array.from(t.querySelectorAll('input[type="text"]'));for(const t of e)if(t.value&&t.value.trim()){const e=t.value.trim();if(e.startsWith("{")&&e.endsWith("}")&&e.length>10){r=e;break}}}if(!r){const e={},n=Array.from(t.querySelectorAll('input[type="text"]'));for(const t of n){const n=t.getAttribute("title");if(n&&n.includes("bodyParameters.parameters")){const o=n.match(/bodyParameters\.parameters\[(\d+)\]\.(name|value)/);if(o){const n=parseInt(o[1]),a=o[2];e[n]||(e[n]={}),e[n][a]=t.value||""}}}if(Object.keys(e).length>0){const t={};for(const n in e){const o=e[n];if(o.name&&void 0!==o.value){let e=o.value;if("string"==typeof e&&e.trim())if(e.startsWith("{")&&e.endsWith("}")||e.startsWith("[")&&e.endsWith("]"))try{e=JSON.parse(e)}catch(e){}else"true"===e||"false"===e?e="true"===e:isNaN(e)||isNaN(parseFloat(e))||(e=parseFloat(e));t[o.name]=e}}Object.keys(t).length>0&&(r=JSON.stringify(t,null,2))}}if(!r){const e=Array.from(t.querySelectorAll("*"));for(const t of e)if(t.textContent&&t.textContent.trim()){const e=t.textContent.trim();if(e.startsWith("{")&&e.endsWith("}")&&e.length>50){r=e;break}}}}catch(e){}if(n||"GET"!==e||o||r||s){a=`Method: ${e}\nURL: ${n}\nQuery Parameters: ${s}\nHeaders: ${o}\nBody: ${r}`}else a||(a="No HTTP Request node data found. Please open an HTTP Request node or select text with HTTP request details.")}else a||(a="No HTTP Request node editor found. Please open an HTTP Request node or select text with HTTP request details.")}catch(e){a||(a="Error extracting HTTP Request node data. Please select text with HTTP request details.")}return{text:a,elementInfo:s,language:t||navigator.language.split("-")[0]}}function insertProcessedText(e,t){let n=!1,o=null;if(t&&t.elementSelector)try{if(o=document.querySelector(t.elementSelector),o)if("INPUT"===o.tagName||"TEXTAREA"===o.tagName){o.value;o.value=e,o.dispatchEvent(new Event("input",{bubbles:!0})),o.dispatchEvent(new Event("change",{bubbles:!0})),o.focus(),n=!0}else if("true"===o.contentEditable){o.textContent;o.textContent=e,o.dispatchEvent(new Event("input",{bubbles:!0})),o.dispatchEvent(new Event("change",{bubbles:!0})),o.focus(),n=!0}else if(t.isCodeMirror&&o.className.includes("cm-editor")){const t=o.querySelector(".cm-content");if(t){t.textContent;let a=!1;if(window.CodeMirror)for(let t in o)if(t.startsWith("__cm")||t.includes("codemirror")){const n=o[t];if(n&&"function"==typeof n.setValue){n.setValue(e),a=!0;break}}if(!a){const n=document.createRange();n.selectNodeContents(t),n.deleteContents();const o=document.createTextNode(e);t.appendChild(o);["input","change","keydown","keyup","paste"].forEach((e=>{t.dispatchEvent(new Event(e,{bubbles:!0,cancelable:!0}))})),t.dispatchEvent(new CustomEvent("cm-update",{bubbles:!0})),t.focus(),setTimeout((()=>{t.dispatchEvent(new KeyboardEvent("keydown",{key:" ",bubbles:!0})),t.dispatchEvent(new KeyboardEvent("keyup",{key:" ",bubbles:!0}))}),10),a=!0}if(!a){const n=window.getSelection(),o=document.createRange();o.selectNodeContents(t),n.removeAllRanges(),n.addRange(o),document.execCommand&&(document.execCommand("selectAll",!1,null),document.execCommand("insertText",!1,e)),a=!0}n=!0}}}catch(e){}if(!n){const t=document.activeElement;if(t)if("INPUT"===t.tagName||"TEXTAREA"===t.tagName){t.value;t.value=e,t.dispatchEvent(new Event("input",{bubbles:!0})),t.dispatchEvent(new Event("change",{bubbles:!0})),n=!0}else if("true"===t.contentEditable){t.textContent;t.textContent=e,t.dispatchEvent(new Event("input",{bubbles:!0})),t.dispatchEvent(new Event("change",{bubbles:!0})),n=!0}}if(!n&&window.monaco&&window.monaco.editor){const t=window.monaco.editor.getEditors();for(const o of t){const t=o.getDomNode();if(t&&t.contains(document.activeElement)){o.getValue();o.setValue(e),o.trigger("keyboard","type",{text:""}),n=!0;break}}if(!n&&t.length>0){const o=t.find((e=>e.hasTextFocus()))||t[0];o.getValue();o.setValue(e),o.trigger("keyboard","type",{text:""}),n=!0}}if(!n){const t=document.querySelectorAll('[data-test-id*="code"], [class*="code"], .cm-editor, .monaco-editor');for(const o of t){const t=o.contains(document.activeElement),a=o===document.activeElement;if(t||a){if(o.querySelector(".cm-content")){const t=o.querySelector(".cm-content");t.textContent;t.textContent=e,t.dispatchEvent(new Event("input",{bubbles:!0})),n=!0;break}if("TEXTAREA"===o.tagName||"INPUT"===o.tagName){o.value;o.value=e,o.dispatchEvent(new Event("input",{bubbles:!0})),o.dispatchEvent(new Event("change",{bubbles:!0})),n=!0;break}}}}if(!n&&t){const t=window.getSelection();if(t.rangeCount>0){const o=t.getRangeAt(0);o.deleteContents(),o.insertNode(document.createTextNode(e)),n=!0}}if(!n){const t=document.querySelectorAll('input, textarea, [contenteditable="true"]'),o=Array.from(t).find((e=>e===document.activeElement));if(o){o.value||o.textContent;"INPUT"===o.tagName||"TEXTAREA"===o.tagName?o.value=e:o.textContent=e,o.dispatchEvent(new Event("input",{bubbles:!0})),o.dispatchEvent(new Event("change",{bubbles:!0}));o.value||o.textContent;n=!0}}}function displayNotification(e,t){const n=document.getElementById("n8n-master-notification");n&&n.remove();const o=document.createElement("div");o.id="n8n-master-notification",o.style.cssText="\n    position: fixed;\n    bottom: 30%;\n    left: 50%;\n    transform: translateX(-50%);\n    padding: 12px 20px;\n    border-radius: 8px;\n    color: white;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    font-size: 14px;\n    font-weight: 500;\n    z-index: 10000;\n    box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n    max-width: 400px;\n    text-align: center;\n    transition: all 0.3s ease;\n  ";const a={processing:"#ff8c00",success:"#28a745",error:"#dc3545"};o.style.backgroundColor=a[e]||a.processing,o.textContent=t,document.body.appendChild(o),setTimeout((()=>{o.parentNode&&(o.style.opacity="0",o.style.transform="translateX(-50%) translateY(20px)",setTimeout((()=>o.remove()),300))}),"processing"===e?1e4:3e3)}function displayPersistentNotification(e,t){const n=document.getElementById("n8n-master-notification");n&&n.remove();const o=document.createElement("div");o.id="n8n-master-notification",o.style.cssText="\n    position: fixed;\n    bottom: 30%;\n    left: 50%;\n    transform: translateX(-50%);\n    padding: 12px 20px;\n    border-radius: 8px;\n    color: white;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    font-size: 14px;\n    font-weight: 500;\n    z-index: 10000;\n    box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n    max-width: 400px;\n    text-align: center;\n    transition: all 0.3s ease;\n  ";const a={processing:"#ff8c00",success:"#28a745",error:"#dc3545"};if(o.style.backgroundColor=a[e]||a.processing,o.textContent=t,document.body.appendChild(o),"processing"===e){o.style.position="relative",o.style.overflow="hidden";const e=document.createElement("div");e.style.cssText="\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      height: 3px;\n      background: rgba(255,255,255,0.3);\n      animation: loading 2s infinite;\n    ";const t=document.createElement("style");t.textContent="\n      @keyframes loading {\n        0% { width: 0%; }\n        50% { width: 100%; }\n        100% { width: 0%; }\n      }\n    ",document.head.appendChild(t),o.appendChild(e)}}function hideNotificationElement(){const e=document.getElementById("n8n-master-notification");e&&(e.style.opacity="0",e.style.transform="translateX(-50%) translateY(20px)",setTimeout((()=>{e.parentNode&&e.remove()}),300))}function sendToChat(e){window.postMessage({type:"N8N_MASTER_SEND_TO_CHAT",content:e,contentType:"curl"},"*")}function sendToChatWithType(e,t,n){chrome.tabs.sendMessage(n,{action:"sendToChat",content:e,contentType:t})}async function generateWorkflowJson(e,t){const{aiProvider:n,apiKeys:o}=t,a=o[n],s=await getCustomSystemMessage("generate-workflow");let r=`You are an expert n8n workflow automation specialist. Create a complete n8n workflow JSON structure based on this description:\n\n"${e}"\n\n🔥 CRITICAL REQUIREMENTS - FOLLOW EXACTLY:\n1. Return ONLY valid JSON - no markdown, no explanations, no code blocks, no comments\n2. Use EXACT n8n node types with correct prefixes\n3. ⚡ EVERY NODE MUST BE CONNECTED - this is absolutely critical!\n4. Use proper node positioning with logical spacing\n5. Create meaningful node names that will be used in connections\n\n🔗 CONNECTION RULES - EXTREMELY IMPORTANT:\n- In the "connections" object, use NODE NAMES, NOT node IDs\n- EVERY node except first MUST have incoming connection\n- IF nodes ALWAYS have 2 outputs: main[0] for TRUE, main[1] for FALSE\n- Use exact node names in connections (case-sensitive)\n- Follow logical workflow sequence\n\n📝 CORRECT NODE TYPES TO USE:\n- Webhook: "n8n-nodes-base.webhook"\n- IF condition: "n8n-nodes-base.if"\n- Set variables: "n8n-nodes-base.set"\n- HTTP Request: "n8n-nodes-base.httpRequest"\n- Telegram: "n8n-nodes-base.telegram"\n- OpenAI (for transcription): "n8n-nodes-base.openAi"\n- AI Agent (for chat/reasoning): "@n8n/n8n-nodes-langchain.agent"\n\n🤖 AI AGENT NODE STRUCTURE:\nFor AI operations like chat, reasoning, or recipe generation, use:\n{\n  "type": "@n8n/n8n-nodes-langchain.agent",\n  "typeVersion": 1.9,\n  "parameters": {\n    "promptType": "define",\n    "text": "={{ $json.message }}",\n    "options": {\n      "systemMessage": "your system prompt here"\n    }\n  }\n}\n\nEXAMPLE STRUCTURE FOR TELEGRAM BOT:\n{\n  "name": "Telegram Recipe Bot",\n  "nodes": [\n    {\n      "id": "webhook",\n      "name": "Telegram Webhook",\n      "type": "n8n-nodes-base.webhook",\n      "typeVersion": 1,\n      "position": [100, 100],\n      "parameters": {\n        "httpMethod": "POST",\n        "path": "telegram-webhook"\n      }\n    },\n    {\n      "id": "checkType", \n      "name": "Check Message Type",\n      "type": "n8n-nodes-base.if",\n      "typeVersion": 1,\n      "position": [300, 100],\n      "parameters": {\n        "conditions": {\n          "string": [\n            {\n              "value1": "={{$json.message.voice}}",\n              "operation": "isNotEmpty"\n            }\n          ]\n        }\n      }\n    },\n    {\n      "id": "aiAgent",\n      "name": "AI Agent",\n      "type": "@n8n/n8n-nodes-langchain.agent",\n      "typeVersion": 1.9,\n      "position": [1100, 100],\n      "parameters": {\n        "promptType": "define",\n        "text": "={{ $json.message }}",\n        "options": {\n          "systemMessage": "you are a specialist in culinary recipes, create a healthy recipe from the ingredients provided by the user."\n        }\n      }\n    }\n  ],\n  "connections": {\n    "Telegram Webhook": {\n      "main": [\n        [\n          {\n            "node": "Check Message Type",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    },\n    "Check Message Type": {\n      "main": [\n        [\n          {\n            "node": "Voice Processing Node",\n            "type": "main", \n            "index": 0\n          }\n        ],\n        [\n          {\n            "node": "Text Processing Node",\n            "type": "main",\n            "index": 0\n          }\n        ]\n      ]\n    }\n  }\n}\n\n🔥 CRITICAL: \n- In connections object, use NODE NAMES like "Telegram Webhook", "Check Message Type", etc. - NOT IDs like "webhook", "checkType"!\n- For AI operations, use "@n8n/n8n-nodes-langchain.agent" with typeVersion 1.9\n- For OpenAI transcription, use "n8n-nodes-base.openAi"\n\nABSOLUTELY REQUIRED: Create workflow for "${e}" with ALL nodes connected using NODE NAMES in connections!`;s&&s.trim()&&(r+=`\n\n📝 ADDITIONAL CUSTOM INSTRUCTIONS:\n${s.trim()}`);try{let e;if("openai"===n||"chatgpt"===n)e=await callOpenAI(r,a);else if("anthropic"===n)e=await callAnthropic(r,a);else if("gemini"===n)e=await callGemini(r,a);else{if("openrouter"!==n)throw new Error("Invalid AI provider");e=await callOpenrouter(r,a)}return cleanupWorkflowJson(e)}catch(e){throw e}}function cleanupWorkflowJson(e){try{let t=e.trim();t=t.replace(/```json\s*/g,""),t=t.replace(/```\s*/g,"");const n=t.indexOf("{");n>0&&(t=t.substring(n));const o=t.lastIndexOf("}");let a;o<t.length-1&&(t=t.substring(0,o+1));try{a=JSON.parse(t)}catch(e){t=t.replace(/,\s*}/g,"}").replace(/,\s*]/g,"]").replace(/'/g,'"').replace(/(\w+):/g,'"$1":');try{a=JSON.parse(t)}catch(e){throw new Error("Invalid JSON format in AI response")}}if(!a.nodes||!Array.isArray(a.nodes))throw new Error("Invalid workflow: missing or invalid nodes array");a.connections&&"object"==typeof a.connections||(a.connections={});const s={},r={};a.nodes.forEach((e=>{e.id&&e.name&&(s[e.id]=e.name,r[e.name]=e.id)}));const i={};let c=!1;for(const[e,t]of Object.entries(a.connections)){let n=e;if(s[e]&&(n=s[e],c=!0),t.main&&Array.isArray(t.main)){const e=t.main.map((e=>Array.isArray(e)?e.map((e=>{let t=e.node;return s[e.node]&&(t=s[e.node],c=!0),{...e,node:t}})):e));i[n]={...t,main:e}}else i[n]=t}c&&(a.connections=i);const l=a.nodes.map((e=>e.name));for(const[e,t]of Object.entries(a.connections))if(l.includes(e)&&t.main)for(const e of t.main)for(const t of e)l.includes(t.node);const u=new Set,p=a.nodes[0];p&&u.add(p.name);for(const[e,t]of Object.entries(a.connections))if(t.main)for(const e of t.main)for(const t of e)u.add(t.node);if(a.nodes.filter((e=>!u.has(e.name))).length>0&&a.nodes.length<=5&&0===Object.keys(a.connections).length){const e={};for(let t=0;t<a.nodes.length-1;t++){const n=a.nodes[t],o=a.nodes[t+1];e[n.name]={main:[[{node:o.name,type:"main",index:0}]]}}a.connections=e}return a.name||(a.name="Generated Workflow"),a.nodes.forEach(((e,t)=>{e.id||(e.id=`node_${t}`),e.name||(e.name=`Node ${t+1}`),e.type,e.typeVersion||(e.typeVersion=1),e.position||(e.position=[100+200*t,100]),e.parameters||(e.parameters={})})),JSON.stringify(a,null,2)}catch(e){throw new Error("Failed to process workflow JSON: "+e.message)}}function testN8nApiKeyInTab(e){try{return"undefined"!=typeof window&&window.N8NApiClient&&"function"==typeof window.N8NApiClient.testApiKey?window.N8NApiClient.testApiKey(e):{success:!1,error:"N8N API Client not available"}}catch(e){return{success:!1,error:e.message||"Unknown error occurred"}}}async function validateApiKey(e,t){try{if("chatgpt"===e||"openai"===e){const e=await fetch("https://api.openai.com/v1/models",{headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"}});if(e.ok)return!0;{const t=await e.text();throw new Error(`OpenAI API error (${e.status}): ${t.substring(0,200)}`)}}if("anthropic"===e){const e=await fetch("https://api.anthropic.com/v1/messages",{method:"POST",headers:{"x-api-key":t,"anthropic-version":"2023-06-01","Content-Type":"application/json","anthropic-dangerous-direct-browser-access":"true"},body:JSON.stringify({model:"claude-sonnet-4-20250514",max_tokens:10,messages:[{role:"user",content:"Test"}]})});if(e.ok)return!0;{const t=await e.text();throw new Error(`Anthropic API error (${e.status}): ${t.substring(0,200)}`)}}if("gemini"===e){const e=await fetch("https://openrouter.ai/api/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json","HTTP-Referer":"https://n8n-master-extension","X-Title":"N8N Master Extension"},body:JSON.stringify({model:"google/gemini-2.5-flash-preview-05-20",max_tokens:10,messages:[{role:"user",content:"Test"}]})});if(e.ok)return!0;{const t=await e.text();throw new Error(`Gemini API error (${e.status}): ${t.substring(0,200)}`)}}if("openrouter"===e){const e=await fetch("https://openrouter.ai/api/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json","HTTP-Referer":"https://n8n-master-extension","X-Title":"N8N Master Extension"},body:JSON.stringify({model:"x-ai/grok-3-beta",max_tokens:10,messages:[{role:"user",content:"Test"}]})});if(e.ok)return!0;{const t=await e.text();throw new Error(`Openrouter API error (${e.status}): ${t.substring(0,200)}`)}}throw new Error(`Unsupported provider: ${e}`)}catch(e){if("TypeError"===e.name&&e.message.includes("fetch"))throw new Error("Network error: Unable to connect to API. Check your internet connection.");throw e}}async function callOpenAIForTemplateSelection(e,t){const n=await getSelectedModel("openai"),o={model:n,messages:[{role:"user",content:e}],response_format:{type:"json_object"}};supportsMaxTokens(n)&&(o.max_tokens=500,o.temperature=.1);const a=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(o)});if(!a.ok){const e=await a.json();throw new Error(e.error?.message||"OpenAI API request failed")}return(await a.json()).choices[0].message.content.trim()}async function callAnthropicForTemplateSelection(e,t){const n=await getSelectedModel("anthropic"),o=await fetch("https://api.anthropic.com/v1/messages",{method:"POST",headers:{"x-api-key":t,"anthropic-version":"2023-06-01","Content-Type":"application/json","anthropic-dangerous-direct-browser-access":"true"},body:JSON.stringify({model:n,max_tokens:500,temperature:.1,messages:[{role:"user",content:e}]})});if(!o.ok){let e;try{const t=await o.json();e=t.error?.message||t.message||`HTTP ${o.status}`}catch(t){const n=await o.text();e=`HTTP ${o.status}: ${n.substring(0,100)}`}throw new Error(e)}return(await o.json()).content[0].text.trim()}async function disableAllPremiumSettings(){try{const e={autoSave:!1,autoPinHttp:!1,autoPinAi:!1,enableHistory:!1,nodeSelector:!1,showTemplates:!1};await chrome.storage.local.set(e)}catch(e){}}async function setupDailyLicenseCheck(){try{await chrome.alarms.clear("dailyLicenseCheck"),await chrome.alarms.create("dailyLicenseCheck",{delayInMinutes:60,periodInMinutes:1440})}catch(e){}}async function performDailyLicenseValidation(){try{const e=await chrome.storage.local.get(["licenseActivated","licenseKey","licenseValidatedAt"]);if(!e.licenseActivated||!e.licenseKey)return;const t=Date.now(),n=e.licenseValidatedAt||0;if(t-n<864e5)return;const o=await getStoredDeviceId();if(await validateLicenseOnServer(e.licenseKey,o))await chrome.storage.local.set({licenseValidatedAt:t});else{await chrome.storage.local.set({licenseActivated:!1,licenseValidatedAt:0}),await disableAllPremiumSettings();try{const e=await chrome.tabs.query({url:"*://*/*"});e.length>0&&chrome.tabs.sendMessage(e[0].id,{action:"showLicenseExpiredNotification"}).catch((()=>{}))}catch(e){}}}catch(e){}}async function validateLicenseOnServer(e,t){try{const n=await fetch("https://consoleai.org/webhook/n8n-master-check-key",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({licenseKey:e,deviceId:t,timestamp:(new Date).toISOString()})});if(!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const o=await n.json();return!0===(Array.isArray(o)?o[0]:o).valid}catch(e){throw e}}async function getStoredDeviceId(){try{const e=await chrome.storage.local.get(["deviceId"]);if(e.deviceId)return e.deviceId;const t="device_"+Math.random().toString(36).substr(2,9)+"_"+Date.now();return await chrome.storage.local.set({deviceId:t}),t}catch(e){return"device_"+Math.random().toString(36).substr(2,9)}}chrome.contextMenus.onClicked.addListener((async(e,t)=>{const n=CONTEXT_MENU_ITEMS.find((t=>t.id===e.menuItemId)),o=CONTEXT_MENU_ITEMS.find((t=>`n8n-master-${t.id}`===e.menuItemId));if(!n&&!o)return void await ensureContextMenuExists();const a=e.menuItemId.startsWith("n8n-master-")?e.menuItemId.replace("n8n-master-",""):e.menuItemId,s=await chrome.storage.local.get(["aiProvider","apiKeys"]),r=await chrome.storage.sync.get(["language"]),i=s.apiKeys[s.aiProvider],c=r.language||"en";if(!i){const e=chrome.i18n.getMessage("contextMenuApiKeyNotConfigured")||"API key not configured. Please set up your API key in extension settings.";return void showNotification(t.id,"error",e)}const l=getActionText(a),u=chrome.i18n.getMessage("n8nMasterProcessing")||"N8N Master";showPersistentNotification(t.id,"processing",`🔄 ${u}: ${l}...`);try{const e=(await chrome.scripting.executeScript({target:{tabId:t.id},function:getContextData,args:[a,c]}))[0].result;if(!e.text&&"generate-curl"!==a){const e=chrome.i18n.getMessage("contextMenuNoTextSelected")||"No text selected or active input field found.";return void showNotification(t.id,"error",e)}let n=await processWithAI(a,e,s);if(n=cleanupResponse(a,n),"generate-curl"===a||"explain-code"===a){const e="explain-code"===a?"explanation":"curl";chrome.tabs.sendMessage(t.id,{action:"sendToChat",content:n,contentType:e}),hideNotification(t.id);const o="generate-curl"===a?chrome.i18n.getMessage("contextMenuCurlSentToChat")||"✅ cURL command sent to chat!":chrome.i18n.getMessage("contextMenuCodeExplained")||"✅ Code explanation sent to chat!";showNotification(t.id,"success",o)}else await chrome.scripting.executeScript({target:{tabId:t.id},function:insertProcessedText,args:[n,e.elementInfo]}),hideNotification(t.id),showNotification(t.id,"success",`✅ ${getSuccessMessage(a)}`)}catch(e){hideNotification(t.id);const n=chrome.i18n.getMessage("contextMenuApiRequestError")||"API Request Error";showNotification(t.id,"error",`❌ ${n}: ${e.message}`)}})),chrome.runtime.onMessage.addListener(((e,t,n)=>((async()=>{try{switch(e.action){case"processWithAI":const o=await processWithAI(e.action,e.contextData,e.settings);n({success:!0,result:o});break;case"getSettings":const a=await chrome.storage.local.get(["aiProvider","apiKeys","autoSave","autoPinHttp","autoPinAi","enableHistory"]);n({success:!0,settings:a});break;case"saveSettings":await chrome.storage.local.set(e.settings),n({success:!0});break;case"chatWithAI":try{const t=await chrome.storage.local.get(["aiProvider","apiKeys"]),{aiProvider:o,apiKeys:a}=t,s=a?.[o];if(!s){n({success:!1,error:"API key not configured"});break}let r,i=e.prompt;if(e.language){i=`${getLanguageInstructions(e.language)}\n\n${e.prompt}`}let c=[];if(e.chatHistory&&Array.isArray(e.chatHistory)&&e.chatHistory.length>0&&(c=e.chatHistory.slice(-10)),e.isTemplateSelection)if("openai"===o||"chatgpt"===o)r=await callOpenAIForTemplateSelection(i,s);else if("anthropic"===o)r=await callAnthropicForTemplateSelection(i,s);else if("gemini"===o)r=await callGeminiForTemplateSelection(i,s);else{if("openrouter"!==o)throw new Error("Invalid AI provider");r=await callOpenrouterForTemplateSelection(i,s)}else if("openai"===o||"chatgpt"===o)r=await callOpenAIWithHistory(i,s,c);else if("anthropic"===o)r=await callAnthropicWithHistory(i,s,c);else if("gemini"===o)r=await callGeminiWithHistory(i,s,c);else{if("openrouter"!==o)throw new Error("Invalid AI provider");r=await callOpenrouterWithHistory(i,s,c)}n({success:!0,response:r})}catch(e){n({success:!1,error:e.message})}break;case"createWorkflow":try{const o=await chrome.storage.local.get(["aiProvider","apiKeys"]);if(!o.aiProvider||!o.apiKeys?.[o.aiProvider]){n({success:!1,error:"AI provider not configured"});break}const a=await generateWorkflowJson(e.description,o);chrome.tabs.sendMessage(t.tab.id,{action:"displayWorkflow",workflow:a}),n({success:!0,workflow:a})}catch(e){chrome.tabs.sendMessage(t.tab.id,{action:"displayError",error:e.message}),n({success:!1,error:e.message})}break;case"generateCurlFromButton":try{const e=await chrome.storage.local.get(["aiProvider","apiKeys","language"]);if(!e.apiKeys||!e.apiKeys[e.aiProvider]){n({success:!1,error:"API key not configured"});break}const o=e.language||"en",a=(await chrome.scripting.executeScript({target:{tabId:t.tab.id},function:getContextData,args:["generate-curl",o]}))[0].result;let s=await processWithAI("generate-curl",a,e);s=cleanupResponse("generate-curl",s),await chrome.scripting.executeScript({target:{tabId:t.tab.id},function:sendToChat,args:[s]}),n({success:!0,response:"cURL generated!"})}catch(e){n({success:!1,error:e.message})}break;case"test":n({success:!0,message:"Background script is working!"});break;case"testApiKey":try{const t=await validateApiKey(e.provider,e.apiKey);n(t?{success:!0,message:"API key is valid and working!"}:{success:!1,error:"Invalid API key or connection failed"})}catch(e){n({success:!1,error:e.message||"Validation failed"})}break;case"testN8nApiKey":try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!t)throw new Error("No active tab found");const o=(await chrome.scripting.executeScript({target:{tabId:t.id},function:testN8nApiKeyInTab,args:[e.apiKey]}))[0].result;n(o)}catch(e){n({success:!1,error:e.message||"N8N API test failed"})}break;case"openPopup":try{await chrome.action.openPopup(),n({success:!0})}catch(e){try{await chrome.runtime.openOptionsPage(),n({success:!0})}catch(e){n({success:!1,error:"Could not open extension settings"})}}break;default:n({success:!1,error:"Unknown action"})}}catch(e){n({success:!1,error:e.message})}})(),!0))),chrome.alarms.onAlarm.addListener((async e=>{"dailyLicenseCheck"===e.name&&await performDailyLicenseValidation()}));